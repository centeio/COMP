{
  "nodetype": "Root",
  "compilation_units": [{
    "nodetype": "CompilationUnit",
    "location": "/home/tiagobalm/git/COMP/Test.java",
    "types": [{
      "nodetype": "Class",
      "location": "/home/tiagobalm/git/COMP/Test.java:1",
      "name": "Test",
      "package": "",
      "members": [
        {
        "nodetype": "Constructor",
        "location": "/home/tiagobalm/git/COMP/Test.java:1",
        "name": "<init>",
        "parameters": [],
        "body": {
          "nodetype": "Block",
          "location": "/home/tiagobalm/git/COMP/Test.java:1",
          "statements": [{
            "nodetype": "Invocation",
            "location": "/home/tiagobalm/git/COMP/Test.java:1",
            "executable": {
              "nodetype": "ExecutableReference",
              "name": "<init>",
              "declarator": {
                "nodetype": "TypeReference",
                "name": "Object",
                "package": "java.lang"
                },
              "type": {
                "nodetype": "TypeReference",
                "name": "Object",
                "package": "java.lang"
                },
              "parameters": []
              },
            "arguments": []
            }]
          }
        },
        {
        "nodetype": "Method",
        "location": "/home/tiagobalm/git/COMP/Test.java:2",
        "name": "main",
        "type": {
          "nodetype": "TypeReference",
          "name": "void"
          },
        "parameters": [{
          "nodetype": "Parameter",
          "location": "/home/tiagobalm/git/COMP/Test.java:2",
          "name": "args",
          "type": {
            "nodetype": "ArrayTypeReference",
            "type": {
              "nodetype": "TypeReference",
              "name": "byte"
              }
            }
          }],
        "body": {
          "nodetype": "Block",
          "location": "/home/tiagobalm/git/COMP/Test.java:2",
          "statements": [
            {
            "nodetype": "LocalVariable",
            "location": "/home/tiagobalm/git/COMP/Test.java:4",
            "name": "x",
            "type": {
              "nodetype": "TypeReference",
              "name": "int"
              },
            "init": {
              "nodetype": "Literal",
              "location": "/home/tiagobalm/git/COMP/Test.java:4",
              "value": 10,
              "type": {
                "nodetype": "TypeReference",
                "name": "int"
                }
              }
            },
            {
            "nodetype": "LocalVariable",
            "location": "/home/tiagobalm/git/COMP/Test.java:5",
            "name": "data",
            "type": {
              "nodetype": "ArrayTypeReference",
              "type": {
                "nodetype": "TypeReference",
                "name": "int"
                }
              },
            "init": {
              "nodetype": "NewArray",
              "location": "/home/tiagobalm/git/COMP/Test.java:5",
              "type": {
                "nodetype": "ArrayTypeReference",
                "type": {
                  "nodetype": "TypeReference",
                  "name": "int"
                  }
                },
              "dimensions": [{
                "nodetype": "Literal",
                "location": "/home/tiagobalm/git/COMP/Test.java:5",
                "value": 10,
                "type": {
                  "nodetype": "TypeReference",
                  "name": "int"
                  }
                }]
              }
            },
            {
            "nodetype": "LocalVariable",
            "location": "/home/tiagobalm/git/COMP/Test.java:6",
            "name": "data2",
            "type": {
              "nodetype": "ArrayTypeReference",
              "type": {
                "nodetype": "TypeReference",
                "name": "int"
                }
              },
            "init": {
              "nodetype": "NewArray",
              "location": "/home/tiagobalm/git/COMP/Test.java:6",
              "type": {
                "nodetype": "ArrayTypeReference",
                "type": {
                  "nodetype": "TypeReference",
                  "name": "int"
                  }
                },
              "elements": [
                {
                "nodetype": "Literal",
                "location": "/home/tiagobalm/git/COMP/Test.java:6",
                "value": 1,
                "type": {
                  "nodetype": "TypeReference",
                  "name": "int"
                  }
                },
                {
                "nodetype": "Literal",
                "location": "/home/tiagobalm/git/COMP/Test.java:6",
                "value": 2,
                "type": {
                  "nodetype": "TypeReference",
                  "name": "int"
                  }
                },
                {
                "nodetype": "Literal",
                "location": "/home/tiagobalm/git/COMP/Test.java:6",
                "value": 3,
                "type": {
                  "nodetype": "TypeReference",
                  "name": "int"
                  }
                },
                {
                "nodetype": "Literal",
                "location": "/home/tiagobalm/git/COMP/Test.java:6",
                "value": 4,
                "type": {
                  "nodetype": "TypeReference",
                  "name": "int"
                  }
                },
                {
                "nodetype": "Literal",
                "location": "/home/tiagobalm/git/COMP/Test.java:6",
                "value": 5,
                "type": {
                  "nodetype": "TypeReference",
                  "name": "int"
                  }
                }
              ]
              }
            },
            {
            "nodetype": "If",
            "location": "/home/tiagobalm/git/COMP/Test.java:8",
            "condition": {
              "nodetype": "BinaryOperator",
              "location": "/home/tiagobalm/git/COMP/Test.java:8",
              "type": {
                "nodetype": "TypeReference",
                "name": "boolean"
                },
              "operator": "==",
              "lhs": {
                "nodetype": "VariableRead",
                "location": "/home/tiagobalm/git/COMP/Test.java:8",
                "var": {
                  "nodetype": "LocalVariableReference",
                  "name": "x",
                  "type": {
                    "nodetype": "TypeReference",
                    "name": "int"
                    }
                  }
                },
              "rhs": {
                "nodetype": "Literal",
                "location": "/home/tiagobalm/git/COMP/Test.java:8",
                "value": 10,
                "type": {
                  "nodetype": "TypeReference",
                  "name": "int"
                  }
                }
              },
            "then": {
              "nodetype": "Block",
              "location": "/home/tiagobalm/git/COMP/Test.java:8",
              "statements": [
                {
                "nodetype": "UnaryOperator",
                "location": "/home/tiagobalm/git/COMP/Test.java:9",
                "type": {
                  "nodetype": "TypeReference",
                  "name": "int"
                  },
                "operator": "_--",
                "operand": {
                  "nodetype": "VariableWrite",
                  "location": "/home/tiagobalm/git/COMP/Test.java:9",
                  "var": {
                    "nodetype": "LocalVariableReference",
                    "name": "x",
                    "type": {
                      "nodetype": "TypeReference",
                      "name": "int"
                      }
                    }
                  }
                },
                {
                "nodetype": "UnaryOperator",
                "location": "/home/tiagobalm/git/COMP/Test.java:9",
                "type": {
                  "nodetype": "TypeReference",
                  "name": "int"
                  },
                "operator": "_++",
                "operand": {
                  "nodetype": "VariableWrite",
                  "location": "/home/tiagobalm/git/COMP/Test.java:9",
                  "var": {
                    "nodetype": "LocalVariableReference",
                    "name": "x",
                    "type": {
                      "nodetype": "TypeReference",
                      "name": "int"
                      }
                    }
                  }
                }
              ]
              },
            "else": {"nodetype": "NullNode"}
            },
            {
            "nodetype": "For",
            "location": "/home/tiagobalm/git/COMP/Test.java:12",
            "init": [{
              "nodetype": "LocalVariable",
              "location": "/home/tiagobalm/git/COMP/Test.java:12",
              "name": "i",
              "type": {
                "nodetype": "TypeReference",
                "name": "int"
                },
              "init": {
                "nodetype": "Literal",
                "location": "/home/tiagobalm/git/COMP/Test.java:12",
                "value": 0,
                "type": {
                  "nodetype": "TypeReference",
                  "name": "int"
                  }
                }
              }],
            "condition": {
              "nodetype": "BinaryOperator",
              "location": "/home/tiagobalm/git/COMP/Test.java:12",
              "type": {
                "nodetype": "TypeReference",
                "name": "boolean"
                },
              "operator": "<",
              "lhs": {
                "nodetype": "VariableRead",
                "location": "/home/tiagobalm/git/COMP/Test.java:12",
                "var": {
                  "nodetype": "LocalVariableReference",
                  "name": "i",
                  "type": {
                    "nodetype": "TypeReference",
                    "name": "int"
                    }
                  }
                },
              "rhs": {
                "nodetype": "VariableRead",
                "location": "/home/tiagobalm/git/COMP/Test.java:12",
                "var": {
                  "nodetype": "LocalVariableReference",
                  "name": "x",
                  "type": {
                    "nodetype": "TypeReference",
                    "name": "int"
                    }
                  }
                }
              },
            "update": [{
              "nodetype": "UnaryOperator",
              "location": "/home/tiagobalm/git/COMP/Test.java:12",
              "type": {
                "nodetype": "TypeReference",
                "name": "int"
                },
              "operator": "_++",
              "operand": {
                "nodetype": "VariableWrite",
                "location": "/home/tiagobalm/git/COMP/Test.java:12",
                "var": {
                  "nodetype": "LocalVariableReference",
                  "name": "i",
                  "type": {
                    "nodetype": "TypeReference",
                    "name": "int"
                    }
                  }
                }
              }],
            "body": {
              "nodetype": "Block",
              "location": "/home/tiagobalm/git/COMP/Test.java:12",
              "statements": [
                {
                "nodetype": "Assignment",
                "location": "/home/tiagobalm/git/COMP/Test.java:13",
                "type": {
                  "nodetype": "TypeReference",
                  "name": "int"
                  },
                "lhs": {
                  "nodetype": "ArrayWrite",
                  "location": "/home/tiagobalm/git/COMP/Test.java:13",
                  "type": {
                    "nodetype": "TypeReference",
                    "name": "int"
                    },
                  "target": {
                    "nodetype": "VariableRead",
                    "location": "/home/tiagobalm/git/COMP/Test.java:13",
                    "var": {
                      "nodetype": "LocalVariableReference",
                      "name": "data",
                      "type": {
                        "nodetype": "ArrayTypeReference",
                        "type": {
                          "nodetype": "TypeReference",
                          "name": "int"
                          }
                        }
                      }
                    },
                  "index": {
                    "nodetype": "VariableRead",
                    "location": "/home/tiagobalm/git/COMP/Test.java:13",
                    "var": {
                      "nodetype": "LocalVariableReference",
                      "name": "i",
                      "type": {
                        "nodetype": "TypeReference",
                        "name": "int"
                        }
                      }
                    }
                  },
                "rhs": {
                  "nodetype": "BinaryOperator",
                  "location": "/home/tiagobalm/git/COMP/Test.java:13",
                  "type": {
                    "nodetype": "TypeReference",
                    "name": "int"
                    },
                  "operator": "+",
                  "lhs": {
                    "nodetype": "VariableRead",
                    "location": "/home/tiagobalm/git/COMP/Test.java:13",
                    "var": {
                      "nodetype": "LocalVariableReference",
                      "name": "x",
                      "type": {
                        "nodetype": "TypeReference",
                        "name": "int"
                        }
                      }
                    },
                  "rhs": {
                    "nodetype": "Literal",
                    "location": "/home/tiagobalm/git/COMP/Test.java:13",
                    "value": 1,
                    "type": {
                      "nodetype": "TypeReference",
                      "name": "int"
                      }
                    }
                  }
                },
                {
                "nodetype": "Invocation",
                "location": "/home/tiagobalm/git/COMP/Test.java:14",
                "target": {
                  "nodetype": "FieldRead",
                  "location": "/home/tiagobalm/git/COMP/Test.java:14",
                  "target": {
                    "nodetype": "TypeAccess",
                    "location": "/home/tiagobalm/git/COMP/Test.java:14",
                    "target": {
                      "nodetype": "TypeReference",
                      "name": "System",
                      "package": "java.lang"
                      }
                    },
                  "var": {
                    "nodetype": "FieldReference",
                    "name": "out",
                    "declarator": {
                      "nodetype": "TypeReference",
                      "name": "System",
                      "package": "java.lang"
                      },
                    "type": {
                      "nodetype": "TypeReference",
                      "name": "PrintStream",
                      "package": "java.io"
                      }
                    }
                  },
                "executable": {
                  "nodetype": "ExecutableReference",
                  "name": "println",
                  "declarator": {
                    "nodetype": "TypeReference",
                    "name": "PrintStream",
                    "package": "java.io"
                    },
                  "type": {
                    "nodetype": "TypeReference",
                    "name": "void"
                    },
                  "parameters": [{
                    "nodetype": "TypeReference",
                    "name": "int"
                    }]
                  },
                "arguments": [{
                  "nodetype": "ArrayRead",
                  "location": "/home/tiagobalm/git/COMP/Test.java:14",
                  "type": {
                    "nodetype": "TypeReference",
                    "name": "int"
                    },
                  "target": {
                    "nodetype": "VariableRead",
                    "location": "/home/tiagobalm/git/COMP/Test.java:14",
                    "var": {
                      "nodetype": "LocalVariableReference",
                      "name": "data",
                      "type": {
                        "nodetype": "ArrayTypeReference",
                        "type": {
                          "nodetype": "TypeReference",
                          "name": "int"
                          }
                        }
                      }
                    },
                  "index": {
                    "nodetype": "VariableRead",
                    "location": "/home/tiagobalm/git/COMP/Test.java:14",
                    "var": {
                      "nodetype": "LocalVariableReference",
                      "name": "i",
                      "type": {
                        "nodetype": "TypeReference",
                        "name": "int"
                        }
                      }
                    }
                  }]
                }
              ]
              }
            },
            {
            "nodetype": "LocalVariable",
            "location": "/home/tiagobalm/git/COMP/Test.java:17",
            "name": "y",
            "type": {
              "nodetype": "TypeReference",
              "name": "int"
              },
            "init": {
              "nodetype": "Literal",
              "location": "/home/tiagobalm/git/COMP/Test.java:17",
              "value": 0,
              "type": {
                "nodetype": "TypeReference",
                "name": "int"
                }
              }
            },
            {
            "nodetype": "While",
            "location": "/home/tiagobalm/git/COMP/Test.java:18",
            "condition": {
              "nodetype": "BinaryOperator",
              "location": "/home/tiagobalm/git/COMP/Test.java:18",
              "type": {
                "nodetype": "TypeReference",
                "name": "boolean"
                },
              "operator": "<",
              "lhs": {
                "nodetype": "VariableRead",
                "location": "/home/tiagobalm/git/COMP/Test.java:18",
                "var": {
                  "nodetype": "LocalVariableReference",
                  "name": "y",
                  "type": {
                    "nodetype": "TypeReference",
                    "name": "int"
                    }
                  }
                },
              "rhs": {
                "nodetype": "VariableRead",
                "location": "/home/tiagobalm/git/COMP/Test.java:18",
                "var": {
                  "nodetype": "LocalVariableReference",
                  "name": "x",
                  "type": {
                    "nodetype": "TypeReference",
                    "name": "int"
                    }
                  }
                }
              },
            "body": {
              "nodetype": "Block",
              "location": "/home/tiagobalm/git/COMP/Test.java:18",
              "statements": [
                {
                "nodetype": "UnaryOperator",
                "location": "/home/tiagobalm/git/COMP/Test.java:19",
                "type": {
                  "nodetype": "TypeReference",
                  "name": "int"
                  },
                "operator": "_--",
                "operand": {
                  "nodetype": "ArrayWrite",
                  "location": "/home/tiagobalm/git/COMP/Test.java:19",
                  "type": {
                    "nodetype": "TypeReference",
                    "name": "int"
                    },
                  "target": {
                    "nodetype": "VariableRead",
                    "location": "/home/tiagobalm/git/COMP/Test.java:19",
                    "var": {
                      "nodetype": "LocalVariableReference",
                      "name": "data",
                      "type": {
                        "nodetype": "ArrayTypeReference",
                        "type": {
                          "nodetype": "TypeReference",
                          "name": "int"
                          }
                        }
                      }
                    },
                  "index": {
                    "nodetype": "VariableRead",
                    "location": "/home/tiagobalm/git/COMP/Test.java:19",
                    "var": {
                      "nodetype": "LocalVariableReference",
                      "name": "y",
                      "type": {
                        "nodetype": "TypeReference",
                        "name": "int"
                        }
                      }
                    }
                  }
                },
                {
                "nodetype": "UnaryOperator",
                "location": "/home/tiagobalm/git/COMP/Test.java:20",
                "type": {
                  "nodetype": "TypeReference",
                  "name": "int"
                  },
                "operator": "_++",
                "operand": {
                  "nodetype": "VariableWrite",
                  "location": "/home/tiagobalm/git/COMP/Test.java:20",
                  "var": {
                    "nodetype": "LocalVariableReference",
                    "name": "y",
                    "type": {
                      "nodetype": "TypeReference",
                      "name": "int"
                      }
                    }
                  }
                }
              ]
              }
            }
          ]
          }
        }
      ]
      }]
    }]
  }